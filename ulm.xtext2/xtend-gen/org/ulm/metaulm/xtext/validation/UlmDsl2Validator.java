/**
 * generated by Xtext 2.12.0
 */
package org.ulm.metaulm.xtext.validation;

import java.util.HashSet;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.xbase.lib.CollectionLiterals;
import org.ulm.metaulm.xtext.ulmDsl2.Entity;
import org.ulm.metaulm.xtext.ulmDsl2.UlmDsl2Package;
import org.ulm.metaulm.xtext.validation.AbstractUlmDsl2Validator;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class UlmDsl2Validator extends AbstractUlmDsl2Validator {
  public final static String INVALID_NAME = "invalidName";
  
  @Check
  public void checkEntityStartsWithCapital(final Entity entity) {
    boolean _isUpperCase = Character.isUpperCase(entity.getName().charAt(0));
    boolean _not = (!_isUpperCase);
    if (_not) {
      this.warning("Name should start with a capital", UlmDsl2Package.Literals.ENTITY__NAME, UlmDsl2Validator.INVALID_NAME);
    }
  }
  
  @Check
  public void checkNoCycleInEntityHierarchy(final Entity entity) {
    Entity _superType = entity.getSuperType();
    boolean _tripleEquals = (_superType == null);
    if (_tripleEquals) {
      return;
    }
    final HashSet<Entity> visitedEntities = CollectionLiterals.<Entity>newHashSet();
    visitedEntities.add(entity);
    Entity current = entity.getSuperType();
    while ((current != null)) {
      {
        boolean _contains = visitedEntities.contains(current);
        if (_contains) {
          String _name = current.getName();
          String _plus = ("cycle in hierarchy of entity \'" + _name);
          String _plus_1 = (_plus + "\'");
          this.error(_plus_1, UlmDsl2Package.eINSTANCE.getEntity_SuperType());
          return;
        }
        visitedEntities.add(current);
        current = current.getSuperType();
      }
    }
  }
}

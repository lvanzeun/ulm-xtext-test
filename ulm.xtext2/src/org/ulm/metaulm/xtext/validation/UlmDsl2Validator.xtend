/*
 * generated by Xtext 2.12.0
 */
package org.ulm.metaulm.xtext.validation

import org.eclipse.xtext.validation.Check
import org.ulm.metaulm.xtext.ulmDsl2.Entity
import org.ulm.metaulm.xtext.ulmDsl2.UlmDsl2Package

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class UlmDsl2Validator extends AbstractUlmDsl2Validator {

	public static val INVALID_NAME = 'invalidName'

	@Check
	def checkEntityStartsWithCapital(Entity entity) {
		if (!Character.isUpperCase(entity.name.charAt(0))) {
			warning('Name should start with a capital', UlmDsl2Package.Literals.ENTITY__NAME, INVALID_NAME)
		}
	}

	@Check
	def checkNoCycleInEntityHierarchy(Entity entity) {
		if (entity.superType === null)
			return // nothing to check
		val visitedEntities = <Entity>newHashSet()
		visitedEntities.add(entity)
		var current = entity.superType
		while (current !== null) {
			if (visitedEntities.contains(current)) {
				error("cycle in hierarchy of entity '" + current.name + "'", UlmDsl2Package::eINSTANCE.entity_SuperType)
				return
			}
			visitedEntities.add(current)
			current = current.superType
		}
	}
}

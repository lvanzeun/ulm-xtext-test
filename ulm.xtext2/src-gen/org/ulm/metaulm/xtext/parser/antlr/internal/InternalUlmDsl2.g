/*
 * generated by Xtext 2.14.0
 */
grammar InternalUlmDsl2;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.ulm.metaulm.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ulm.metaulm.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ulm.metaulm.xtext.services.UlmDsl2GrammarAccess;

}

@parser::members {

 	private UlmDsl2GrammarAccess grammarAccess;

    public InternalUlmDsl2Parser(TokenStream input, UlmDsl2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected UlmDsl2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getContextsContextParserRuleCall_3_0());
				}
				lv_contexts_3_0=ruleContext
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"contexts",
						lv_contexts_3_0,
						"org.ulm.metaulm.xtext.UlmDsl2.Context");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getContextAccess().getContextKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContextAccess().getVersionVersionParserRuleCall_2_0());
				}
				lv_version_2_0=ruleVersion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextRule());
					}
					set(
						$current,
						"version",
						lv_version_2_0,
						"org.ulm.metaulm.xtext.UlmDsl2.Version");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='attributes'
			{
				newLeafNode(otherlv_4, grammarAccess.getContextAccess().getAttributesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContextAccess().getAttributesAttributeParserRuleCall_4_2_0());
					}
					lv_attributes_6_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextRule());
						}
						add(
							$current,
							"attributes",
							lv_attributes_6_0,
							"org.ulm.metaulm.xtext.UlmDsl2.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_7='}'
			{
				newLeafNode(otherlv_7, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_4_3());
			}
		)?
		(
			otherlv_8='lookups'
			{
				newLeafNode(otherlv_8, grammarAccess.getContextAccess().getLookupsKeyword_5_0());
			}
			otherlv_9='{'
			{
				newLeafNode(otherlv_9, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContextAccess().getLookupsLookupParserRuleCall_5_2_0());
					}
					lv_lookups_10_0=ruleLookup
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextRule());
						}
						add(
							$current,
							"lookups",
							lv_lookups_10_0,
							"org.ulm.metaulm.xtext.UlmDsl2.Lookup");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
		(
			otherlv_12='entities'
			{
				newLeafNode(otherlv_12, grammarAccess.getContextAccess().getEntitiesKeyword_6_0());
			}
			otherlv_13='{'
			{
				newLeafNode(otherlv_13, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getContextAccess().getEntitiesEntityParserRuleCall_6_2_0());
					}
					lv_entities_14_0=ruleEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getContextRule());
						}
						add(
							$current,
							"entities",
							lv_entities_14_0,
							"org.ulm.metaulm.xtext.UlmDsl2.Entity");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleVersion
entryRuleVersion returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVersionRule()); }
	iv_ruleVersion=ruleVersion
	{ $current=$iv_ruleVersion.current.getText(); }
	EOF;

// Rule Version
ruleVersion returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getVersionAccess().getINTTerminalRuleCall_0());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVersionAccess().getFullStopKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getVersionAccess().getINTTerminalRuleCall_2());
		}
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getVersionAccess().getFullStopKeyword_3());
		}
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getVersionAccess().getINTTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeTypeParserRuleCall_1_0_0());
					}
					lv_type_1_1=ruleAttributeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"type",
							lv_type_1_1,
							"org.ulm.metaulm.xtext.UlmDsl2.AttributeType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeStringTypeParserRuleCall_1_0_1());
					}
					lv_type_1_2=ruleAttributeStringType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"type",
							lv_type_1_2,
							"org.ulm.metaulm.xtext.UlmDsl2.AttributeStringType");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getAttributeAccess().getTypeAttributeDecimalTypeParserRuleCall_1_0_2());
					}
					lv_type_1_3=ruleAttributeDecimalType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAttributeRule());
						}
						set(
							$current,
							"type",
							lv_type_1_3,
							"org.ulm.metaulm.xtext.UlmDsl2.AttributeDecimalType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_desc_2_0=RULE_STRING
				{
					newLeafNode(lv_desc_2_0, grammarAccess.getAttributeAccess().getDescSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current; }
	EOF;

// Rule AttributeType
ruleAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_1='int'
				{
					newLeafNode(lv_name_0_1, grammarAccess.getAttributeTypeAccess().getNameIntKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_1, null);
				}
				    |
				lv_name_0_2='boolean'
				{
					newLeafNode(lv_name_0_2, grammarAccess.getAttributeTypeAccess().getNameBooleanKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_2, null);
				}
				    |
				lv_name_0_3='date'
				{
					newLeafNode(lv_name_0_3, grammarAccess.getAttributeTypeAccess().getNameDateKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_3, null);
				}
				    |
				lv_name_0_4='datetime'
				{
					newLeafNode(lv_name_0_4, grammarAccess.getAttributeTypeAccess().getNameDatetimeKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_4, null);
				}
				    |
				lv_name_0_5='timestamp'
				{
					newLeafNode(lv_name_0_5, grammarAccess.getAttributeTypeAccess().getNameTimestampKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_5, null);
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeStringType
entryRuleAttributeStringType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeStringTypeRule()); }
	iv_ruleAttributeStringType=ruleAttributeStringType
	{ $current=$iv_ruleAttributeStringType.current; }
	EOF;

// Rule AttributeStringType
ruleAttributeStringType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='string'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeStringTypeAccess().getNameStringKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeStringTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "string");
				}
			)
		)
		(
			(
				(
					lv_array_1_0='['
					{
						newLeafNode(lv_array_1_0, grammarAccess.getAttributeStringTypeAccess().getArrayLeftSquareBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeStringTypeRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			(
				(
					lv_length_2_0=RULE_INT
					{
						newLeafNode(lv_length_2_0, grammarAccess.getAttributeStringTypeAccess().getLengthINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeStringTypeRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getAttributeStringTypeAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleAttributeDecimalType
entryRuleAttributeDecimalType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeDecimalTypeRule()); }
	iv_ruleAttributeDecimalType=ruleAttributeDecimalType
	{ $current=$iv_ruleAttributeDecimalType.current; }
	EOF;

// Rule AttributeDecimalType
ruleAttributeDecimalType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='decimal'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getAttributeDecimalTypeAccess().getNameDecimalKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeDecimalTypeRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "decimal");
				}
			)
		)
		(
			(
				(
					lv_array_1_0='['
					{
						newLeafNode(lv_array_1_0, grammarAccess.getAttributeDecimalTypeAccess().getArrayLeftSquareBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeDecimalTypeRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			(
				(
					lv_scale_2_0=RULE_INT
					{
						newLeafNode(lv_scale_2_0, grammarAccess.getAttributeDecimalTypeAccess().getScaleINTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeDecimalTypeRule());
						}
						setWithLastConsumed(
							$current,
							"scale",
							lv_scale_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getAttributeDecimalTypeAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						lv_precision_4_0=RULE_INT
						{
							newLeafNode(lv_precision_4_0, grammarAccess.getAttributeDecimalTypeAccess().getPrecisionINTTerminalRuleCall_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeDecimalTypeRule());
							}
							setWithLastConsumed(
								$current,
								"precision",
								lv_precision_4_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)?
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeDecimalTypeAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_type_0_1='data'
					{
						newLeafNode(lv_type_0_1, grammarAccess.getEntityAccess().getTypeDataKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_1, null);
					}
					    |
					lv_type_0_2='static'
					{
						newLeafNode(lv_type_0_2, grammarAccess.getEntityAccess().getTypeStaticKeyword_0_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_2, null);
					}
					    |
					lv_type_0_3='lookup'
					{
						newLeafNode(lv_type_0_3, grammarAccess.getEntityAccess().getTypeLookupKeyword_0_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						setWithLastConsumed($current, "type", lv_type_0_3, null);
					}
				)
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_desc_2_0=RULE_STRING
				{
					newLeafNode(lv_desc_2_0, grammarAccess.getEntityAccess().getDescSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"desc",
						lv_desc_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		(
			otherlv_3='extends'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getExtendsKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_3_1_0());
					}
				)
			)
		)?
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_5_0());
				}
				lv_features_6_0=ruleFeature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"features",
						lv_features_6_0,
						"org.ulm.metaulm.xtext.UlmDsl2.Feature");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	iv_ruleFeature=ruleFeature
	{ $current=$iv_ruleFeature.current; }
	EOF;

// Rule Feature
ruleFeature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureAccess().getTypeFeatureTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.ulm.metaulm.xtext.UlmDsl2.FeatureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_mandatory_1_0='mandatory'
				{
					newLeafNode(lv_mandatory_1_0, grammarAccess.getFeatureAccess().getMandatoryMandatoryKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureRule());
					}
					setWithLastConsumed($current, "mandatory", true, "mandatory");
				}
			)
		)?
		(
			(
				lv_identifier_2_0='identifier'
				{
					newLeafNode(lv_identifier_2_0, grammarAccess.getFeatureAccess().getIdentifierIdentifierKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFeatureRule());
					}
					setWithLastConsumed($current, "identifier", true, "identifier");
				}
			)
		)?
		(
			otherlv_3='as'
			{
				newLeafNode(otherlv_3, grammarAccess.getFeatureAccess().getAsKeyword_3_0());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFeatureRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getFeatureAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleFeatureType
entryRuleFeatureType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureTypeRule()); }
	iv_ruleFeatureType=ruleFeatureType
	{ $current=$iv_ruleFeatureType.current; }
	EOF;

// Rule FeatureType
ruleFeatureType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureTypeAccess().getTypeAttributeFeatureTypeParserRuleCall_0_0());
				}
				lv_type_0_1=ruleAttributeFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_0_1,
						"org.ulm.metaulm.xtext.UlmDsl2.AttributeFeatureType");
					afterParserOrEnumRuleCall();
				}
				    |
				{
					newCompositeNode(grammarAccess.getFeatureTypeAccess().getTypeEntityFeatureTypeParserRuleCall_0_1());
				}
				lv_type_0_2=ruleEntityFeatureType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_0_2,
						"org.ulm.metaulm.xtext.UlmDsl2.EntityFeatureType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeFeatureType
entryRuleAttributeFeatureType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeFeatureTypeRule()); }
	iv_ruleAttributeFeatureType=ruleAttributeFeatureType
	{ $current=$iv_ruleAttributeFeatureType.current; }
	EOF;

// Rule AttributeFeatureType
ruleAttributeFeatureType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeFeatureTypeRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAttributeFeatureTypeAccess().getAttributeAttributeCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='bounded'
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeFeatureTypeAccess().getBoundedKeyword_1_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeFeatureTypeRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getAttributeFeatureTypeAccess().getLookupLookupCrossReference_1_1_0());
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEntityFeatureType
entryRuleEntityFeatureType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityFeatureTypeRule()); }
	iv_ruleEntityFeatureType=ruleEntityFeatureType
	{ $current=$iv_ruleEntityFeatureType.current; }
	EOF;

// Rule EntityFeatureType
ruleEntityFeatureType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='references'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityFeatureTypeAccess().getReferencesKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityFeatureTypeRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getEntityFeatureTypeAccess().getEntityEntityCrossReference_1_0());
				}
			)
		)
		(
			(
				(
					lv_array_2_0='['
					{
						newLeafNode(lv_array_2_0, grammarAccess.getEntityFeatureTypeAccess().getArrayLeftSquareBracketKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityFeatureTypeRule());
						}
						setWithLastConsumed($current, "array", true, "[");
					}
				)
			)
			(
				(
					lv_length_3_0=RULE_INT
					{
						newLeafNode(lv_length_3_0, grammarAccess.getEntityFeatureTypeAccess().getLengthINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityFeatureTypeRule());
						}
						setWithLastConsumed(
							$current,
							"length",
							lv_length_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)?
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntityFeatureTypeAccess().getRightSquareBracketKeyword_2_2());
			}
		)?
	)
;

// Entry rule entryRuleLookup
entryRuleLookup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupRule()); }
	iv_ruleLookup=ruleLookup
	{ $current=$iv_ruleLookup.current; }
	EOF;

// Rule Lookup
ruleLookup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getLookupAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLookupAccess().getTypeLookupIntParserRuleCall_1_0_0());
					}
					lv_type_1_1=ruleLookupInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupRule());
						}
						set(
							$current,
							"type",
							lv_type_1_1,
							"org.ulm.metaulm.xtext.UlmDsl2.LookupInt");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getLookupAccess().getTypeLookupStringParserRuleCall_1_0_1());
					}
					lv_type_1_2=ruleLookupString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupRule());
						}
						set(
							$current,
							"type",
							lv_type_1_2,
							"org.ulm.metaulm.xtext.UlmDsl2.LookupString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLookupInt
entryRuleLookupInt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupIntRule()); }
	iv_ruleLookupInt=ruleLookupInt
	{ $current=$iv_ruleLookupInt.current; }
	EOF;

// Rule LookupInt
ruleLookupInt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='integer'
		{
			newLeafNode(otherlv_0, grammarAccess.getLookupIntAccess().getIntegerKeyword_0());
		}
		(
			(
				lv_description_1_0=RULE_STRING
				{
					newLeafNode(lv_description_1_0, grammarAccess.getLookupIntAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupIntRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_2='values'
		{
			newLeafNode(otherlv_2, grammarAccess.getLookupIntAccess().getValuesKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLookupIntAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLookupIntAccess().getValuesLookupIntValueParserRuleCall_4_0());
				}
				lv_values_4_0=ruleLookupIntValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLookupIntRule());
					}
					add(
						$current,
						"values",
						lv_values_4_0,
						"org.ulm.metaulm.xtext.UlmDsl2.LookupIntValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLookupIntAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLookupIntAccess().getValuesLookupIntValueParserRuleCall_5_1_0());
					}
					lv_values_6_0=ruleLookupIntValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupIntRule());
						}
						add(
							$current,
							"values",
							lv_values_6_0,
							"org.ulm.metaulm.xtext.UlmDsl2.LookupIntValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLookupIntAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getLookupIntAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleLookupString
entryRuleLookupString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupStringRule()); }
	iv_ruleLookupString=ruleLookupString
	{ $current=$iv_ruleLookupString.current; }
	EOF;

// Rule LookupString
ruleLookupString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='string'
		{
			newLeafNode(otherlv_0, grammarAccess.getLookupStringAccess().getStringKeyword_0());
		}
		(
			(
				lv_description_1_0=RULE_STRING
				{
					newLeafNode(lv_description_1_0, grammarAccess.getLookupStringAccess().getDescriptionSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupStringRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_2='values'
		{
			newLeafNode(otherlv_2, grammarAccess.getLookupStringAccess().getValuesKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getLookupStringAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLookupStringAccess().getValuesLookupStringValueParserRuleCall_4_0());
				}
				lv_values_4_0=ruleLookupStringValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLookupStringRule());
					}
					add(
						$current,
						"values",
						lv_values_4_0,
						"org.ulm.metaulm.xtext.UlmDsl2.LookupStringValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLookupStringAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLookupStringAccess().getValuesLookupStringValueParserRuleCall_5_1_0());
					}
					lv_values_6_0=ruleLookupStringValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLookupStringRule());
						}
						add(
							$current,
							"values",
							lv_values_6_0,
							"org.ulm.metaulm.xtext.UlmDsl2.LookupStringValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLookupStringAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getLookupStringAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleLookupIntValue
entryRuleLookupIntValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupIntValueRule()); }
	iv_ruleLookupIntValue=ruleLookupIntValue
	{ $current=$iv_ruleLookupIntValue.current; }
	EOF;

// Rule LookupIntValue
ruleLookupIntValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLookupIntValueAccess().getLookupIntValueAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLookupIntValueAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getLookupIntValueAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupIntValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLookupIntValueAccess().getColonKeyword_3());
		}
		(
			(
				lv_description_4_0=RULE_STRING
				{
					newLeafNode(lv_description_4_0, grammarAccess.getLookupIntValueAccess().getDescriptionSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupIntValueRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLookupIntValueAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleLookupStringValue
entryRuleLookupStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLookupStringValueRule()); }
	iv_ruleLookupStringValue=ruleLookupStringValue
	{ $current=$iv_ruleLookupStringValue.current; }
	EOF;

// Rule LookupStringValue
ruleLookupStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLookupStringValueAccess().getLookupStringValueAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLookupStringValueAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getLookupStringValueAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupStringValueRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLookupStringValueAccess().getColonKeyword_3());
		}
		(
			(
				lv_description_4_0=RULE_STRING
				{
					newLeafNode(lv_description_4_0, grammarAccess.getLookupStringValueAccess().getDescriptionSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLookupStringValueRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLookupStringValueAccess().getRightParenthesisKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

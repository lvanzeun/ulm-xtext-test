/*
 * generated by Xtext 2.14.0
 */
package org.ulm.metaulm.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UlmDsl2GrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cContextsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cContextsContextParserRuleCall_3_0 = (RuleCall)cContextsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Model:
		//	'model' name=ID '{'
		//	contexts+=Context*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'model' name=ID '{' contexts+=Context* '}'
		public Group getGroup() { return cGroup; }
		
		//'model'
		public Keyword getModelKeyword_0() { return cModelKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//contexts+=Context*
		public Assignment getContextsAssignment_3() { return cContextsAssignment_3; }
		
		//Context
		public RuleCall getContextsContextParserRuleCall_3_0() { return cContextsContextParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Context");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cVersionVersionParserRuleCall_2_0 = (RuleCall)cVersionAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAttributesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAttributesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_4_2_0 = (RuleCall)cAttributesAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLookupsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLookupsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLookupsLookupParserRuleCall_5_2_0 = (RuleCall)cLookupsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEntitiesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cEntitiesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cEntitiesEntityParserRuleCall_6_2_0 = (RuleCall)cEntitiesAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Context:
		//	'context' name=ID version=Version '{' ('attributes' '{'
		//	attributes+=Attribute*
		//	'}')? ('lookups' '{'
		//	lookups+=Lookup*
		//	'}')? ('entities' '{'
		//	entities+=Entity*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'context' name=ID version=Version '{' ('attributes' '{' attributes+=Attribute* '}')? ('lookups' '{' lookups+=Lookup*
		//'}')? ('entities' '{' entities+=Entity* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'context'
		public Keyword getContextKeyword_0() { return cContextKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//version=Version
		public Assignment getVersionAssignment_2() { return cVersionAssignment_2; }
		
		//Version
		public RuleCall getVersionVersionParserRuleCall_2_0() { return cVersionVersionParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('attributes' '{' attributes+=Attribute* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'attributes'
		public Keyword getAttributesKeyword_4_0() { return cAttributesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//attributes+=Attribute*
		public Assignment getAttributesAssignment_4_2() { return cAttributesAssignment_4_2; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_4_2_0() { return cAttributesAttributeParserRuleCall_4_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_3() { return cRightCurlyBracketKeyword_4_3; }
		
		//('lookups' '{' lookups+=Lookup* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'lookups'
		public Keyword getLookupsKeyword_5_0() { return cLookupsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//lookups+=Lookup*
		public Assignment getLookupsAssignment_5_2() { return cLookupsAssignment_5_2; }
		
		//Lookup
		public RuleCall getLookupsLookupParserRuleCall_5_2_0() { return cLookupsLookupParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
		
		//('entities' '{' entities+=Entity* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'entities'
		public Keyword getEntitiesKeyword_6_0() { return cEntitiesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_6_2() { return cEntitiesAssignment_6_2; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_6_2_0() { return cEntitiesEntityParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class VersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Version");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cINTTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		
		//Version:
		//	INT '.' INT '.' INT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT '.' INT '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
		
		//'.'
		public Keyword getFullStopKeyword_3() { return cFullStopKeyword_3; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4() { return cINTTerminalRuleCall_4; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeAttributeTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDescAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Attribute:
		//	'attribute' type=AttributeType name=ID desc=STRING? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' type=AttributeType name=ID desc=STRING? ';'
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//type=AttributeType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//AttributeType
		public RuleCall getTypeAttributeTypeParserRuleCall_1_0() { return cTypeAttributeTypeParserRuleCall_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//desc=STRING?
		public Assignment getDescAssignment_3() { return cDescAssignment_3; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_3_0() { return cDescSTRINGTerminalRuleCall_3_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.AttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeBasicTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cArrayAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cArrayLeftSquareBracketKeyword_1_0_0 = (Keyword)cArrayAssignment_1_0.eContents().get(0);
		private final Assignment cLengthAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLengthINTTerminalRuleCall_1_1_0 = (RuleCall)cLengthAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//AttributeType:
		//	type=BasicType (array?='[' length=INT? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=BasicType (array?='[' length=INT? ']')?
		public Group getGroup() { return cGroup; }
		
		//type=BasicType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//BasicType
		public RuleCall getTypeBasicTypeParserRuleCall_0_0() { return cTypeBasicTypeParserRuleCall_0_0; }
		
		//(array?='[' length=INT? ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//array?='['
		public Assignment getArrayAssignment_1_0() { return cArrayAssignment_1_0; }
		
		//'['
		public Keyword getArrayLeftSquareBracketKeyword_1_0_0() { return cArrayLeftSquareBracketKeyword_1_0_0; }
		
		//length=INT?
		public Assignment getLengthAssignment_1_1() { return cLengthAssignment_1_1; }
		
		//INT
		public RuleCall getLengthINTTerminalRuleCall_1_1_0() { return cLengthINTTerminalRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class BasicTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.BasicType");
		private final Assignment cTypeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeNameAlternatives_0 = (Alternatives)cTypeNameAssignment.eContents().get(0);
		private final Keyword cTypeNameStringKeyword_0_0 = (Keyword)cTypeNameAlternatives_0.eContents().get(0);
		private final Keyword cTypeNameIntKeyword_0_1 = (Keyword)cTypeNameAlternatives_0.eContents().get(1);
		private final Keyword cTypeNameDecimalKeyword_0_2 = (Keyword)cTypeNameAlternatives_0.eContents().get(2);
		private final Keyword cTypeNameBooleanKeyword_0_3 = (Keyword)cTypeNameAlternatives_0.eContents().get(3);
		private final Keyword cTypeNameDateKeyword_0_4 = (Keyword)cTypeNameAlternatives_0.eContents().get(4);
		private final Keyword cTypeNameDatetimeKeyword_0_5 = (Keyword)cTypeNameAlternatives_0.eContents().get(5);
		private final Keyword cTypeNameTimestampKeyword_0_6 = (Keyword)cTypeNameAlternatives_0.eContents().get(6);
		
		//BasicType:
		//	typeName=('string' | 'int' | 'decimal' | 'boolean' | 'date' | 'datetime' | 'timestamp');
		@Override public ParserRule getRule() { return rule; }
		
		//typeName=('string' | 'int' | 'decimal' | 'boolean' | 'date' | 'datetime' | 'timestamp')
		public Assignment getTypeNameAssignment() { return cTypeNameAssignment; }
		
		//('string' | 'int' | 'decimal' | 'boolean' | 'date' | 'datetime' | 'timestamp')
		public Alternatives getTypeNameAlternatives_0() { return cTypeNameAlternatives_0; }
		
		//'string'
		public Keyword getTypeNameStringKeyword_0_0() { return cTypeNameStringKeyword_0_0; }
		
		//'int'
		public Keyword getTypeNameIntKeyword_0_1() { return cTypeNameIntKeyword_0_1; }
		
		//'decimal'
		public Keyword getTypeNameDecimalKeyword_0_2() { return cTypeNameDecimalKeyword_0_2; }
		
		//'boolean'
		public Keyword getTypeNameBooleanKeyword_0_3() { return cTypeNameBooleanKeyword_0_3; }
		
		//'date'
		public Keyword getTypeNameDateKeyword_0_4() { return cTypeNameDateKeyword_0_4; }
		
		//'datetime'
		public Keyword getTypeNameDatetimeKeyword_0_5() { return cTypeNameDatetimeKeyword_0_5; }
		
		//'timestamp'
		public Keyword getTypeNameTimestampKeyword_0_6() { return cTypeNameTimestampKeyword_0_6; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cTypeAlternatives_0_0 = (Alternatives)cTypeAssignment_0.eContents().get(0);
		private final Keyword cTypeDataKeyword_0_0_0 = (Keyword)cTypeAlternatives_0_0.eContents().get(0);
		private final Keyword cTypeStaticKeyword_0_0_1 = (Keyword)cTypeAlternatives_0_0.eContents().get(1);
		private final Keyword cTypeLookupKeyword_0_0_2 = (Keyword)cTypeAlternatives_0_0.eContents().get(2);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDescAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSuperTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSuperTypeEntityCrossReference_4_1_0 = (CrossReference)cSuperTypeAssignment_4_1.eContents().get(0);
		private final RuleCall cSuperTypeEntityIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSuperTypeEntityCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cFeaturesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cFeaturesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cFeaturesFeatureParserRuleCall_6_2_0 = (RuleCall)cFeaturesAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Entity:
		//	type=('data' | 'static' | 'lookup')? 'entity' name=ID desc=STRING? ('extends' superType=[Entity])? '{' ('features'
		//	'{'
		//	features+=Feature*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//type=('data' | 'static' | 'lookup')? 'entity' name=ID desc=STRING? ('extends' superType=[Entity])? '{' ('features' '{'
		//features+=Feature* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//type=('data' | 'static' | 'lookup')?
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//('data' | 'static' | 'lookup')
		public Alternatives getTypeAlternatives_0_0() { return cTypeAlternatives_0_0; }
		
		//'data'
		public Keyword getTypeDataKeyword_0_0_0() { return cTypeDataKeyword_0_0_0; }
		
		//'static'
		public Keyword getTypeStaticKeyword_0_0_1() { return cTypeStaticKeyword_0_0_1; }
		
		//'lookup'
		public Keyword getTypeLookupKeyword_0_0_2() { return cTypeLookupKeyword_0_0_2; }
		
		//'entity'
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//desc=STRING?
		public Assignment getDescAssignment_3() { return cDescAssignment_3; }
		
		//STRING
		public RuleCall getDescSTRINGTerminalRuleCall_3_0() { return cDescSTRINGTerminalRuleCall_3_0; }
		
		//('extends' superType=[Entity])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }
		
		//superType=[Entity]
		public Assignment getSuperTypeAssignment_4_1() { return cSuperTypeAssignment_4_1; }
		
		//[Entity]
		public CrossReference getSuperTypeEntityCrossReference_4_1_0() { return cSuperTypeEntityCrossReference_4_1_0; }
		
		//ID
		public RuleCall getSuperTypeEntityIDTerminalRuleCall_4_1_0_1() { return cSuperTypeEntityIDTerminalRuleCall_4_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//('features' '{' features+=Feature* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'features'
		public Keyword getFeaturesKeyword_6_0() { return cFeaturesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//features+=Feature*
		public Assignment getFeaturesAssignment_6_2() { return cFeaturesAssignment_6_2; }
		
		//Feature
		public RuleCall getFeaturesFeatureParserRuleCall_6_2_0() { return cFeaturesFeatureParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_3() { return cRightCurlyBracketKeyword_6_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Feature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cFeatureTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cFeatureTypeFeatureTypeTypeParserRuleCall_0_0 = (RuleCall)cFeatureTypeAssignment_0.eContents().get(0);
		private final Assignment cMandatoryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cMandatoryMandatoryKeyword_1_0 = (Keyword)cMandatoryAssignment_1.eContents().get(0);
		private final Assignment cIdentifierAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cIdentifierIdentifierKeyword_2_0 = (Keyword)cIdentifierAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAliasAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAliasIDTerminalRuleCall_3_1_0 = (RuleCall)cAliasAssignment_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Feature:
		//	featureType=FeatureTypeType
		//	mandatory?='mandatory'?
		//	identifier?='identifier'? ('as' alias=ID)?
		//	';';
		@Override public ParserRule getRule() { return rule; }
		
		//featureType=FeatureTypeType mandatory?='mandatory'? identifier?='identifier'? ('as' alias=ID)? ';'
		public Group getGroup() { return cGroup; }
		
		//featureType=FeatureTypeType
		public Assignment getFeatureTypeAssignment_0() { return cFeatureTypeAssignment_0; }
		
		//FeatureTypeType
		public RuleCall getFeatureTypeFeatureTypeTypeParserRuleCall_0_0() { return cFeatureTypeFeatureTypeTypeParserRuleCall_0_0; }
		
		//mandatory?='mandatory'?
		public Assignment getMandatoryAssignment_1() { return cMandatoryAssignment_1; }
		
		//'mandatory'
		public Keyword getMandatoryMandatoryKeyword_1_0() { return cMandatoryMandatoryKeyword_1_0; }
		
		//identifier?='identifier'?
		public Assignment getIdentifierAssignment_2() { return cIdentifierAssignment_2; }
		
		//'identifier'
		public Keyword getIdentifierIdentifierKeyword_2_0() { return cIdentifierIdentifierKeyword_2_0; }
		
		//('as' alias=ID)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'as'
		public Keyword getAsKeyword_3_0() { return cAsKeyword_3_0; }
		
		//alias=ID
		public Assignment getAliasAssignment_3_1() { return cAliasAssignment_3_1; }
		
		//ID
		public RuleCall getAliasIDTerminalRuleCall_3_1_0() { return cAliasIDTerminalRuleCall_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}
	public class FeatureTypeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.FeatureTypeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeFeatureTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cArrayAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cArrayLeftSquareBracketKeyword_1_0_0 = (Keyword)cArrayAssignment_1_0.eContents().get(0);
		private final Assignment cLengthAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLengthINTTerminalRuleCall_1_1_0 = (RuleCall)cLengthAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//FeatureTypeType:
		//	type=FeatureType (array?='[' length=INT? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//type=FeatureType (array?='[' length=INT? ']')?
		public Group getGroup() { return cGroup; }
		
		//type=FeatureType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//FeatureType
		public RuleCall getTypeFeatureTypeParserRuleCall_0_0() { return cTypeFeatureTypeParserRuleCall_0_0; }
		
		//(array?='[' length=INT? ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//array?='['
		public Assignment getArrayAssignment_1_0() { return cArrayAssignment_1_0; }
		
		//'['
		public Keyword getArrayLeftSquareBracketKeyword_1_0_0() { return cArrayLeftSquareBracketKeyword_1_0_0; }
		
		//length=INT?
		public Assignment getLengthAssignment_1_1() { return cLengthAssignment_1_1; }
		
		//INT
		public RuleCall getLengthINTTerminalRuleCall_1_1_0() { return cLengthINTTerminalRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class FeatureTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.FeatureType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFeatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cTAlternatives_1_0 = (Alternatives)cTAssignment_1.eContents().get(0);
		private final RuleCall cTAttributeFeatureTypeParserRuleCall_1_0_0 = (RuleCall)cTAlternatives_1_0.eContents().get(0);
		private final RuleCall cTEntityFeatureTypeParserRuleCall_1_0_1 = (RuleCall)cTAlternatives_1_0.eContents().get(1);
		
		//FeatureType:
		//	'feature' t=(AttributeFeatureType | EntityFeatureType);
		@Override public ParserRule getRule() { return rule; }
		
		//'feature' t=(AttributeFeatureType | EntityFeatureType)
		public Group getGroup() { return cGroup; }
		
		//'feature'
		public Keyword getFeatureKeyword_0() { return cFeatureKeyword_0; }
		
		//t=(AttributeFeatureType | EntityFeatureType)
		public Assignment getTAssignment_1() { return cTAssignment_1; }
		
		//(AttributeFeatureType | EntityFeatureType)
		public Alternatives getTAlternatives_1_0() { return cTAlternatives_1_0; }
		
		//AttributeFeatureType
		public RuleCall getTAttributeFeatureTypeParserRuleCall_1_0_0() { return cTAttributeFeatureTypeParserRuleCall_1_0_0; }
		
		//EntityFeatureType
		public RuleCall getTEntityFeatureTypeParserRuleCall_1_0_1() { return cTEntityFeatureTypeParserRuleCall_1_0_1; }
	}
	public class AttributeFeatureTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.AttributeFeatureType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAttributeTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAttributeTypeAttributeCrossReference_1_0 = (CrossReference)cAttributeTypeAssignment_1.eContents().get(0);
		private final RuleCall cAttributeTypeAttributeIDTerminalRuleCall_1_0_1 = (RuleCall)cAttributeTypeAttributeCrossReference_1_0.eContents().get(1);
		
		//AttributeFeatureType:
		//	'attribute' attributeType=[Attribute];
		@Override public ParserRule getRule() { return rule; }
		
		//'attribute' attributeType=[Attribute]
		public Group getGroup() { return cGroup; }
		
		//'attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//attributeType=[Attribute]
		public Assignment getAttributeTypeAssignment_1() { return cAttributeTypeAssignment_1; }
		
		//[Attribute]
		public CrossReference getAttributeTypeAttributeCrossReference_1_0() { return cAttributeTypeAttributeCrossReference_1_0; }
		
		//ID
		public RuleCall getAttributeTypeAttributeIDTerminalRuleCall_1_0_1() { return cAttributeTypeAttributeIDTerminalRuleCall_1_0_1; }
	}
	public class EntityFeatureTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.EntityFeatureType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEntityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntityTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEntityTypeEntityCrossReference_1_0 = (CrossReference)cEntityTypeAssignment_1.eContents().get(0);
		private final RuleCall cEntityTypeEntityIDTerminalRuleCall_1_0_1 = (RuleCall)cEntityTypeEntityCrossReference_1_0.eContents().get(1);
		
		//EntityFeatureType:
		//	'entity' entityType=[Entity];
		@Override public ParserRule getRule() { return rule; }
		
		//'entity' entityType=[Entity]
		public Group getGroup() { return cGroup; }
		
		//'entity'
		public Keyword getEntityKeyword_0() { return cEntityKeyword_0; }
		
		//entityType=[Entity]
		public Assignment getEntityTypeAssignment_1() { return cEntityTypeAssignment_1; }
		
		//[Entity]
		public CrossReference getEntityTypeEntityCrossReference_1_0() { return cEntityTypeEntityCrossReference_1_0; }
		
		//ID
		public RuleCall getEntityTypeEntityIDTerminalRuleCall_1_0_1() { return cEntityTypeEntityIDTerminalRuleCall_1_0_1; }
	}
	public class LookupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.Lookup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLookupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cLookupIntParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cLookupStringParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		
		//Lookup:
		//	'lookup' (LookupInt | LookupString);
		@Override public ParserRule getRule() { return rule; }
		
		//'lookup' (LookupInt | LookupString)
		public Group getGroup() { return cGroup; }
		
		//'lookup'
		public Keyword getLookupKeyword_0() { return cLookupKeyword_0; }
		
		//LookupInt | LookupString
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//LookupInt
		public RuleCall getLookupIntParserRuleCall_1_0() { return cLookupIntParserRuleCall_1_0; }
		
		//LookupString
		public RuleCall getLookupStringParserRuleCall_1_1() { return cLookupStringParserRuleCall_1_1; }
	}
	public class LookupIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.LookupInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntegerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cValuesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValuesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValuesLookupIntValueParserRuleCall_5_0 = (RuleCall)cValuesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cValuesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cValuesLookupIntValueParserRuleCall_6_1_0 = (RuleCall)cValuesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//LookupInt:
		//	'integer' name=ID description=STRING? 'values' '{' values+=LookupIntValue ("," values+=LookupIntValue)* '}' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'integer' name=ID description=STRING? 'values' '{' values+=LookupIntValue ("," values+=LookupIntValue)* '}' ';'
		public Group getGroup() { return cGroup; }
		
		//'integer'
		public Keyword getIntegerKeyword_0() { return cIntegerKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING?
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'values'
		public Keyword getValuesKeyword_3() { return cValuesKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//values+=LookupIntValue
		public Assignment getValuesAssignment_5() { return cValuesAssignment_5; }
		
		//LookupIntValue
		public RuleCall getValuesLookupIntValueParserRuleCall_5_0() { return cValuesLookupIntValueParserRuleCall_5_0; }
		
		//("," values+=LookupIntValue)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//values+=LookupIntValue
		public Assignment getValuesAssignment_6_1() { return cValuesAssignment_6_1; }
		
		//LookupIntValue
		public RuleCall getValuesLookupIntValueParserRuleCall_6_1_0() { return cValuesLookupIntValueParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class LookupStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.LookupString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		private final Keyword cValuesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValuesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValuesLookupStringValueParserRuleCall_5_0 = (RuleCall)cValuesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cValuesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cValuesLookupStringValueParserRuleCall_6_1_0 = (RuleCall)cValuesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//LookupString:
		//	'string' name=ID description=STRING? 'values' '{' values+=LookupStringValue ("," values+=LookupStringValue)* '}' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'string' name=ID description=STRING? 'values' '{' values+=LookupStringValue ("," values+=LookupStringValue)* '}' ';'
		public Group getGroup() { return cGroup; }
		
		//'string'
		public Keyword getStringKeyword_0() { return cStringKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//description=STRING?
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_2_0() { return cDescriptionSTRINGTerminalRuleCall_2_0; }
		
		//'values'
		public Keyword getValuesKeyword_3() { return cValuesKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//values+=LookupStringValue
		public Assignment getValuesAssignment_5() { return cValuesAssignment_5; }
		
		//LookupStringValue
		public RuleCall getValuesLookupStringValueParserRuleCall_5_0() { return cValuesLookupStringValueParserRuleCall_5_0; }
		
		//("," values+=LookupStringValue)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//values+=LookupStringValue
		public Assignment getValuesAssignment_6_1() { return cValuesAssignment_6_1; }
		
		//LookupStringValue
		public RuleCall getValuesLookupStringValueParserRuleCall_6_1_0() { return cValuesLookupStringValueParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class LookupIntValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.LookupIntValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLookupIntValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueINTTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LookupIntValue:
		//	{LookupIntValue}
		//	'(' value=INT description=STRING ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{LookupIntValue} '(' value=INT description=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//{LookupIntValue}
		public Action getLookupIntValueAction_0() { return cLookupIntValueAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//value=INT
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_2_0() { return cValueINTTerminalRuleCall_2_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0() { return cDescriptionSTRINGTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class LookupStringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.ulm.metaulm.xtext.UlmDsl2.LookupStringValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLookupStringValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueSTRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LookupStringValue:
		//	{LookupStringValue}
		//	'(' value=STRING description=STRING ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{LookupStringValue} '(' value=STRING description=STRING ')'
		public Group getGroup() { return cGroup; }
		
		//{LookupStringValue}
		public Action getLookupStringValueAction_0() { return cLookupStringValueAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//value=STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_2_0() { return cValueSTRINGTerminalRuleCall_2_0; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0() { return cDescriptionSTRINGTerminalRuleCall_3_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	
	
	private final ModelElements pModel;
	private final ContextElements pContext;
	private final VersionElements pVersion;
	private final AttributeElements pAttribute;
	private final AttributeTypeElements pAttributeType;
	private final BasicTypeElements pBasicType;
	private final EntityElements pEntity;
	private final FeatureElements pFeature;
	private final FeatureTypeTypeElements pFeatureTypeType;
	private final FeatureTypeElements pFeatureType;
	private final AttributeFeatureTypeElements pAttributeFeatureType;
	private final EntityFeatureTypeElements pEntityFeatureType;
	private final LookupElements pLookup;
	private final LookupIntElements pLookupInt;
	private final LookupStringElements pLookupString;
	private final LookupIntValueElements pLookupIntValue;
	private final LookupStringValueElements pLookupStringValue;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UlmDsl2GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pContext = new ContextElements();
		this.pVersion = new VersionElements();
		this.pAttribute = new AttributeElements();
		this.pAttributeType = new AttributeTypeElements();
		this.pBasicType = new BasicTypeElements();
		this.pEntity = new EntityElements();
		this.pFeature = new FeatureElements();
		this.pFeatureTypeType = new FeatureTypeTypeElements();
		this.pFeatureType = new FeatureTypeElements();
		this.pAttributeFeatureType = new AttributeFeatureTypeElements();
		this.pEntityFeatureType = new EntityFeatureTypeElements();
		this.pLookup = new LookupElements();
		this.pLookupInt = new LookupIntElements();
		this.pLookupString = new LookupStringElements();
		this.pLookupIntValue = new LookupIntValueElements();
		this.pLookupStringValue = new LookupStringValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.ulm.metaulm.xtext.UlmDsl2".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	'model' name=ID '{'
	//	contexts+=Context*
	//	'}';
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Context:
	//	'context' name=ID version=Version '{' ('attributes' '{'
	//	attributes+=Attribute*
	//	'}')? ('lookups' '{'
	//	lookups+=Lookup*
	//	'}')? ('entities' '{'
	//	entities+=Entity*
	//	'}')?
	//	'}';
	public ContextElements getContextAccess() {
		return pContext;
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}
	
	//Version:
	//	INT '.' INT '.' INT;
	public VersionElements getVersionAccess() {
		return pVersion;
	}
	
	public ParserRule getVersionRule() {
		return getVersionAccess().getRule();
	}
	
	//Attribute:
	//	'attribute' type=AttributeType name=ID desc=STRING? ';';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//AttributeType:
	//	type=BasicType (array?='[' length=INT? ']')?;
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//BasicType:
	//	typeName=('string' | 'int' | 'decimal' | 'boolean' | 'date' | 'datetime' | 'timestamp');
	public BasicTypeElements getBasicTypeAccess() {
		return pBasicType;
	}
	
	public ParserRule getBasicTypeRule() {
		return getBasicTypeAccess().getRule();
	}
	
	//Entity:
	//	type=('data' | 'static' | 'lookup')? 'entity' name=ID desc=STRING? ('extends' superType=[Entity])? '{' ('features'
	//	'{'
	//	features+=Feature*
	//	'}')?
	//	'}';
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Feature:
	//	featureType=FeatureTypeType
	//	mandatory?='mandatory'?
	//	identifier?='identifier'? ('as' alias=ID)?
	//	';';
	public FeatureElements getFeatureAccess() {
		return pFeature;
	}
	
	public ParserRule getFeatureRule() {
		return getFeatureAccess().getRule();
	}
	
	//FeatureTypeType:
	//	type=FeatureType (array?='[' length=INT? ']')?;
	public FeatureTypeTypeElements getFeatureTypeTypeAccess() {
		return pFeatureTypeType;
	}
	
	public ParserRule getFeatureTypeTypeRule() {
		return getFeatureTypeTypeAccess().getRule();
	}
	
	//FeatureType:
	//	'feature' t=(AttributeFeatureType | EntityFeatureType);
	public FeatureTypeElements getFeatureTypeAccess() {
		return pFeatureType;
	}
	
	public ParserRule getFeatureTypeRule() {
		return getFeatureTypeAccess().getRule();
	}
	
	//AttributeFeatureType:
	//	'attribute' attributeType=[Attribute];
	public AttributeFeatureTypeElements getAttributeFeatureTypeAccess() {
		return pAttributeFeatureType;
	}
	
	public ParserRule getAttributeFeatureTypeRule() {
		return getAttributeFeatureTypeAccess().getRule();
	}
	
	//EntityFeatureType:
	//	'entity' entityType=[Entity];
	public EntityFeatureTypeElements getEntityFeatureTypeAccess() {
		return pEntityFeatureType;
	}
	
	public ParserRule getEntityFeatureTypeRule() {
		return getEntityFeatureTypeAccess().getRule();
	}
	
	//Lookup:
	//	'lookup' (LookupInt | LookupString);
	public LookupElements getLookupAccess() {
		return pLookup;
	}
	
	public ParserRule getLookupRule() {
		return getLookupAccess().getRule();
	}
	
	//LookupInt:
	//	'integer' name=ID description=STRING? 'values' '{' values+=LookupIntValue ("," values+=LookupIntValue)* '}' ';';
	public LookupIntElements getLookupIntAccess() {
		return pLookupInt;
	}
	
	public ParserRule getLookupIntRule() {
		return getLookupIntAccess().getRule();
	}
	
	//LookupString:
	//	'string' name=ID description=STRING? 'values' '{' values+=LookupStringValue ("," values+=LookupStringValue)* '}' ';';
	public LookupStringElements getLookupStringAccess() {
		return pLookupString;
	}
	
	public ParserRule getLookupStringRule() {
		return getLookupStringAccess().getRule();
	}
	
	//LookupIntValue:
	//	{LookupIntValue}
	//	'(' value=INT description=STRING ')';
	public LookupIntValueElements getLookupIntValueAccess() {
		return pLookupIntValue;
	}
	
	public ParserRule getLookupIntValueRule() {
		return getLookupIntValueAccess().getRule();
	}
	
	//LookupStringValue:
	//	{LookupStringValue}
	//	'(' value=STRING description=STRING ')';
	public LookupStringValueElements getLookupStringValueAccess() {
		return pLookupStringValue;
	}
	
	public ParserRule getLookupStringValueRule() {
		return getLookupStringValueAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
